apply from: '../dependencies.gradle'

apply plugin: 'maven'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.anarres.jarjar'

sourceCompatibility = 1.6
targetCompatibility = 1.6
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
task createTestResources {
    def mockMakerFile = new File("$projectDir/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker")
    if (System.env.MOCK_MAKER != null) {
        logger.info("Using MockMaker ${System.env.MOCK_MAKER}")
        mockMakerFile.parentFile.mkdirs()
        mockMakerFile.createNewFile()
        mockMakerFile.write(System.env.MOCK_MAKER)
    } else {
        logger.info("Using default MockMaker: mock-maker-inline")
    }
}

android {
    compileSdkVersion 30
    buildToolsVersion "28.0.3"
    sourceSets {
        main.root = 'src/main'
//        androidTest.setRoot('src/test')
    }
    configurations.all {
//    resolutionStrategy.force 'com.android.support:support-annotations:22.1.0'
        resolutionStrategy.force 'org.ow2.asm:asm:5.0.1'
        resolutionStrategy.force 'org.ow2.asm:asm-tree:5.0.1'
        resolutionStrategy.force 'org.ow2.asm:asm-util:5.0.1'
//    resolutionStrategy.force  'com.google.guava:guava:19.0'
        resolutionStrategy {
            force "org.ow2.asm:asm:7.0"
        }
    }
    defaultConfig {
        applicationId "ru.android.zheka.gmapexample1"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 33
        versionName "3.1.1"
        multiDexEnabled = true
        //robolectric
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
//    test {
//        exclude 'ru/android/zheka/gmapexample1/home/Test*'
//    }
    testOptions {
// robolectric
        unitTests.includeAndroidResources = true
        unitTests {
            all {
                //javaMaxHeapSize "512m"
                jvmArgs '-XX:MaxPermSize=8192m'
//                exclude 'ru/android/zheka/gmapexample1/ExampleUnitTest.*'
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    configurations {
//        all*.exclude module: 'support-v4'
        all*.exclude module: 'io'
        all*.exclude module: 'java'
        all*.exclude group: 'java', module: 'io'
    }
//    dexOptions{
//        javaMaxHeapSize="9000M"
//        List<String> p = new ArrayList<>();
//        p.add("--main-dex-list mainClasses1")
//        p.add("--multi-dex")
//        p.add("--set-max-idx=55000")
//        additionalParameters=p
//        //mainClassName "mainClasses"
//    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    signingConfigs {
        config {
            keyAlias 'playstore'
            keyPassword 'android'
            storeFile file('/home/zheka/.android/release.keystore')
            storePassword 'android'
        }
    }
    buildTypes {
        release {
            //minifyEnabled true
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            signingConfig signingConfigs.config
        }
        debug {
//              minifyEnabled true
            useProguard false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            signingConfig signingConfigs.config
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'androidsupportmultidexversion.txt'
//        exclude 'licenses/javolution.license.TXT'
        //exclude '**/BufferedOutputStream.class'
    }
    dataBinding {
        enabled = true
    }
}

repositories {
//    maven { url "file://home/zheka/.m2/repository/" }
    jcenter()
    mavenLocal()
}

dependencies {
//    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    //robolectric
    api 'com.google.guava:guava:28.2-android'
    testImplementation group: 'com.squareup', name: 'fest-android', version: '1.0.0'

    testImplementation (group: 'com.activeandroid', name: 'activeandroid', version: '3.1.18-SNAPSHOT'){
        exclude group: 'com.android.support'
    }
    androidTestImplementation (group: 'com.activeandroid', name: 'activeandroid', version: '3.1.18-SNAPSHOT'){
        exclude group: 'com.android.support'
    }
    implementation (group: 'com.activeandroid', name: 'activeandroid', version: '3.1.18-SNAPSHOT')

    implementation(group: 'com.google.android.gms', name: 'play-services', version: '8.1.0')

    testImplementation(group: 'com.google.android.gms', name: 'play-services', version: '8.1.0') {
        exclude(module: 'play-services-maps')
    }
    implementation(group: 'com.google.android.gms', name: 'play-services-maps', version: '8.1.0')//'11.6.0'
    testImplementation(group: 'com.google.android.gms', name: 'play-services-maps', version: '8.1.0')//'11.6.0'

    implementation group: 'com.android.support', name: 'appcompat-v7' //23.0.0//18.0.0
    testImplementation group: 'com.android.support', name: 'appcompat-v7' //23.0.0//18.0.0

    implementation (group: 'com.android.support', name: 'support-v4')
    testImplementation (group: 'com.android.support', name: 'support-v4')
    androidTestImplementation (group: 'com.android.support', name: 'support-v4')

    implementation(group: 'org.roboguice', name: 'roboguice', version: '2.0')
//            {
//exclude(module: 'guice')
//    }
    implementation(group: 'com.google.inject', name: 'guice', version: '4.2.2', classifier: 'no_aop')
            {
                exclude(module: 'guava')
            }
    testImplementation (test.robolectric)
    {
        exclude group: 'org.codehaus.plexus'
        exclude group: 'org.apache.maven'
        exclude group: 'org.apache.xerces'
        exclude group: 'org.codehaus'
        exclude group: 'org.cyberneko'
//        exclude group: 'org.robolectric.internal'

    }
    androidTestImplementation (test.robolectric) {
        exclude group: 'org.codehaus.plexus'
        exclude group: 'org.apache.maven'
        exclude group: 'org.apache.xerces'
        exclude group: 'org.codehaus'
        exclude group: 'org.cyberneko'
//        exclude group: 'org.robolectric.internal'
    }
    implementation 'androidx.test:runner:1.1.0'

    testImplementation test.resources
    testImplementation test.utils

//    testImplementation test.shadowCore
//        androidTestImplementation test.shadowCore
    testImplementation test.shadowPlay

//    provided(group: 'android', name: 'android', version: '6.0_r3')//6.0_r3
    //testCompile (group: 'android', name: 'android', version:'5.1.1_r2')
    implementation 'com.android.support:multidex:1.0.3'
    testImplementation "org.robolectric:shadows-multidex:3.1.1"
    testImplementation test.junit
    androidTestImplementation  test.junit
//    testImplementation (group: 'org.robolectric', name: 'android-all', version: '10-robolectric-5803371'){
//         exclude group: 'org.robolectric.internal'
//    }
//    androidTestImplementation (group: 'org.robolectric', name: 'android-all', version: '10-robolectric-5803371'){
//         exclude group: 'org.robolectric.internal'
//    }

//        androidTestImplementation  group: 'org.robolectric', name: 'android-all', version: 'Q-robolectric-5415296'

//    androidTestImplementation androidx.testRunner
//    androidTestImplementation androidx.testEspressoCore

    kapt di.daggerApi
    implementation di.daggerApi
    implementation di.daggerSupport

    annotationProcessor di.daggerProcessor
    kapt di.daggerProcessor
    androidTestAnnotationProcessor di.daggerProcessor
    testAnnotationProcessor di.daggerProcessor
    kaptAndroidTest di.daggerProcessor
    kaptTest di.daggerProcessor

    kapt di.daggerAndroidProcessor
    annotationProcessor di.daggerAndroidProcessor
    androidTestAnnotationProcessor di.daggerAndroidProcessor
    testAnnotationProcessor di.daggerAndroidProcessor
    kaptAndroidTest di.daggerAndroidProcessor
    kaptTest di.daggerAndroidProcessor

    testImplementation ('com.github.fabioCollini.daggermock:daggermock:0.8.5') {
        exclude module:'daggermock'
    }
//    kaptTest 'com.github.fabioCollini.daggermock:daggermock:0.8.5'//TODO remove
    androidTestImplementation ('com.github.fabioCollini.daggermock:daggermock:0.8.5') {
        exclude module:'daggermock'
    }
//    kaptAndroidTest 'com.github.fabioCollini.daggermock:daggermock:0.8.5'//TODO remove

    implementation androidx.appcompat
    // auto size text
    androidTestImplementation androidx.appcompat
//    api androidx.constraintLayout
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'//2.0.0-alpha4'
    // layout constraints
    androidTestImplementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    api rx.android
    api rx.java
    testImplementation test.mockito
    androidTestImplementation test.mockito
    implementation test.fragment

    implementation (http.retrofit)
//            {
//        exclude(group: 'com.squareup.okhttp3')
//    }
//    implementation http.moshiModule
    implementation http.gsonModule
    implementation ("com.squareup.okhttp3:okhttp:3.12.0"){
        force = true
    }
    implementation "androidx.core:core-ktx:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //provided (group: 'com.almende.eve', name: 'eve-bundle-android-ws', version:'3.1.1'){
//exclude(group: 'com.android.support')
//exclude module: 'support-v4'
    //}
    //compile group: 'com.android.support', name: 'mediarouter-v7', version:'18.0.0'
    // Use jarjar.repackage in place of a dependency notation.
/*		compile jarjar.repackage {
			from 'android:android:6.0_r3'
			//classDelete "com.google.common.base.**"
			//classRename ("java.**", "aJava.@1")
           	//classRename ("javax.**", "aJavax.@1")
		}

*/
}
/*
class mySneakyIntervention implements TaskExecutionListener {
    void afterExecute(Task t,TaskState s) {}
    void beforeExecute(Task t) {
        t.name.equals("transformClassesWithJarMergingForDebug"){
            print "------------------1"
        }
        if (t instanceof  AntlrTask) {
            // Let's make a backup of all the input files
            // (Not really sure why you would want to do _that_,
            //     but it's an example)
            print '-----------'
        }
    }
}
*/
