
apply plugin: 'maven'
apply plugin: 'com.android.application'


group = 'ru.android.zheka.gmapexample1'
version = '1.1.1-SNAPSHOT'

description = """Trace Editor"""

sourceCompatibility = 1.6
targetCompatibility = 1.6
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}
// multidex-1.0.2
allprojects {
    repositories {
        maven {
            url 'https://maven.google.com'
        }
    }
}
buildscript {
    repositories {
        jcenter()
        maven { url "file://home/zheka/.m2/repository/" }
	    maven {url "http://repo1.maven.org/maven2"}
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'
        classpath 'org.anarres.jarjar:jarjar-gradle:1.0.0'
        classpath 'com.google.gms:google-services:4.0.1'
    }
}

//plugins {
//    id 'org.anarres.jarjar.jarjar' version '1.0.0'
//}
apply plugin: 'org.anarres.jarjar'
//apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
sourceSets{
    androidTest.setRoot('tests')
}
    configurations.all {
//    resolutionStrategy.force 'com.android.support:support-annotations:22.1.0'
    resolutionStrategy.force  'org.ow2.asm:asm:5.0.1'
    resolutionStrategy.force  'org.ow2.asm:asm-tree:5.0.1'
    resolutionStrategy.force  'org.ow2.asm:asm-util:5.0.1'
    resolutionStrategy.force  'com.google.guava:guava:19.0'
}
    defaultConfig {
        applicationId "ru.android.zheka.gmapexample1"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 25
        versionName "2.8"
        multiDexEnabled = true
    }
    testOptions {
        unitTests {
            all {
                //javaMaxHeapSize "512m"
                jvmArgs '-XX:MaxPermSize=8192m'
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    configurations {
        //all*.exclude module: 'support-v4'
        all*.exclude module: 'io'
        all*.exclude module: 'java'
        all*.exclude group: 'java', module: 'io'
    }
    dexOptions{
        javaMaxHeapSize="9000M"
        List<String> p = new ArrayList<>();
        p.add("--main-dex-list mainClasses1")
        p.add("--multi-dex")
        p.add("--set-max-idx=55000")
        additionalParameters=p
        //mainClassName "mainClasses"
    }
    lintOptions {
          checkReleaseBuilds false
          // Or, if you prefer, you can continue to check for errors in release builds,
          // but continue the build even when errors are found:
          abortOnError false
      }
    signingConfigs {
        config {
            keyAlias 'playstore'
            keyPassword 'android'
            storeFile file('/home/zheka/.android/release.keystore')
            storePassword 'android'
        }
    }
    buildTypes {
        release {
            //minifyEnabled true
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            signingConfig signingConfigs.config
        }
        debug {
              minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'

            signingConfig signingConfigs.config
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        //exclude '**/BufferedOutputStream.class'
    }
}

repositories {
    maven { url "file://home/zheka/.m2/repository/" }

    jcenter()

    maven { url "http://repo1.maven.org/maven2" }
//     maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    compile (group: 'com.activeandroid', name: 'activeandroid', version:'3.1.18-SNAPSHOT')
    compile group: 'com.squareup', name: 'fest-android', version:'1.0.0'
    compile(group: 'com.google.android.gms', name: 'play-services', version:'8.1.0') {
exclude(module: 'play-services-maps')
    }
    compile (group: 'com.google.android.gms', name: 'play-services-maps', version:'8.1.0')//'11.6.0'
    compile (group: 'com.android.support', name: 'appcompat-v7', version:'18.0.0')//23.0.0//18.0.0
    //compile (group: 'com.android.support', name: 'support-v4', version:'23.0.0')
    compile(group: 'org.roboguice', name: 'roboguice', version:'2.0') {
exclude(module: 'guice')
    }
    compile group: 'com.google.inject', name: 'guice', version:'4.0-beta', classifier:'no_aop'
    testCompile group: 'org.robolectric', name: 'robolectric', version:'3.8+'
    //testCompile group: 'org.robolectric', name: 'robolectric-resources', version:'4.0+'
    testCompile group: 'org.robolectric', name: 'resources', version:'3.8+'
    testCompile group: 'org.robolectric', name: 'sandbox', version:'3.8+'
    //testCompile group: 'org.robolectric', name: 'robolectric-sandbox', version:'3.4+'
    testCompile group: 'org.robolectric', name: 'utils', version:'3.8+'
    testCompile group: 'org.robolectric', name: 'shadows-core-v16', version:'3.1.3'
    testCompile group: 'org.robolectric', name: 'shadows-play-services', version:'3.1'
    provided (group: 'android', name: 'android', version:'6.0_r3')//6.0_r3
    //testCompile (group: 'android', name: 'android', version:'5.1.1_r2')
    compile 'com.android.support:multidex:1.0.3'
    testCompile "org.robolectric:shadows-multidex:3.1.1"
    testCompile group: 'junit', name: 'junit', version:'4.11'
    provided (group: 'com.almende.eve', name: 'eve-bundle-android-ws', version:'3.1.1'){
//exclude(group: 'com.android.support')
//exclude module: 'support-v4'
    }
    //compile group: 'com.android.support', name: 'mediarouter-v7', version:'18.0.0'
		// Use jarjar.repackage in place of a dependency notation.
/*		compile jarjar.repackage {
			from 'android:android:6.0_r3'
			//classDelete "com.google.common.base.**"
			//classRename ("java.**", "aJava.@1")
           	//classRename ("javax.**", "aJavax.@1")
		}

*/
}
/*
class mySneakyIntervention implements TaskExecutionListener {
    void afterExecute(Task t,TaskState s) {}
    void beforeExecute(Task t) {
        t.name.equals("transformClassesWithJarMergingForDebug"){
            print "------------------1"
        }
        if (t instanceof  AntlrTask) {
            // Let's make a backup of all the input files
            // (Not really sure why you would want to do _that_,
            //     but it's an example)
            print '-----------'
        }
    }
}
*/
